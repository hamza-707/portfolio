{"ast":null,"code":"import _slicedToArray from\"/home/hamza-707/portfolio-website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,useRef,useMemo}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CircularProgressBar=function CircularProgressBar(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),number=_useState2[0],setNumber=_useState2[1];var targetRef=useRef(null);var counter=0;var options=useMemo(function(){return{root:null,rootMargin:\"0px\",threshold:0.3};},[]);useEffect(function(){var observer=new IntersectionObserver(function(entries){var _entries=_slicedToArray(entries,1),entry=_entries[0];if(entry.isIntersecting){setTimeout(function(){setInterval(function(){if(counter===props.value){clearInterval();}else{counter+=1;setNumber(counter);}},20);},400*props.number);}},options);var currentTarget=targetRef.current;if(currentTarget){observer.observe(currentTarget);}return function(){if(currentTarget){observer.unobserve(currentTarget);}};},[targetRef,options]);return/*#__PURE__*/_jsxs(\"div\",{ref:targetRef,className:\"circular-progress-bar\",children:[/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",version:\"1.1\",width:\"160px\",height:\"160px\",children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsxs(\"linearGradient\",{id:\"GradientColor\",children:[/*#__PURE__*/_jsx(\"stop\",{offset:\"0%\",stopColor:\"#334155\"}),/*#__PURE__*/_jsx(\"stop\",{offset:\"100%\",stopColor:\"#405d6c\"})]})}),/*#__PURE__*/_jsx(\"circle\",{style:{stroke:\"url(#GradientColor)\",strokeDashoffset:\"calc(439 - 439 * \".concat(number,\" / 100)\")},cx:\"80\",cy:\"80\",r:\"70\",strokeLinecap:\"round\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"number\",children:[number,\"/100\"]})]});};export default CircularProgressBar;","map":{"version":3,"names":["React","useEffect","useState","useRef","useMemo","CircularProgressBar","props","number","setNumber","targetRef","counter","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","entry","isIntersecting","setTimeout","setInterval","value","clearInterval","currentTarget","current","observe","unobserve","stroke","strokeDashoffset"],"sources":["/home/hamza-707/portfolio-website/portfolio/src/components/CircularProgressBar.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from \"react\";\n\nconst CircularProgressBar = (props) => {\n  const [number, setNumber] = useState(0);\n  const targetRef = useRef(null);\n  let counter = 0;\n  const options = useMemo(() => {\n    return {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.3,\n    };\n  }, []);\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      const [entry] = entries;\n      if (entry.isIntersecting) {\n        setTimeout(() => {\n          setInterval(() => {\n            if (counter === props.value) {\n              clearInterval();\n            } else {\n              counter += 1;\n              setNumber(counter);\n            }\n          }, 20);\n        }, 400 * props.number);\n      }\n    }, options);\n    const currentTarget = targetRef.current;\n    if (currentTarget) {\n      observer.observe(currentTarget);\n    }\n    return () => {\n      if (currentTarget) {\n        observer.unobserve(currentTarget);\n      }\n    };\n  }, [targetRef, options]);\n  return (\n    <div ref={targetRef} className=\"circular-progress-bar\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        width=\"160px\"\n        height=\"160px\"\n      >\n        <defs>\n          <linearGradient id=\"GradientColor\">\n            <stop offset=\"0%\" stopColor=\"#334155\" />\n            <stop offset=\"100%\" stopColor=\"#405d6c\" />\n          </linearGradient>\n        </defs>\n        <circle\n          style={{\n            stroke: \"url(#GradientColor)\",\n            strokeDashoffset: `calc(439 - 439 * ${number} / 100)`,\n          }}\n          cx=\"80\"\n          cy=\"80\"\n          r=\"70\"\n          strokeLinecap=\"round\"\n        ></circle>\n      </svg>\n      <div className=\"number\">{number}/100</div>\n    </div>\n  );\n};\n\nexport default CircularProgressBar;\n"],"mappings":"uHAAA,MAAOA,MAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,MAArC,CAA6CC,OAA7C,KAA4D,OAA5D,C,wFAEA,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACC,KAAD,CAAW,CACrC,cAA4BJ,QAAQ,CAAC,CAAD,CAApC,wCAAOK,MAAP,eAAeC,SAAf,eACA,GAAMC,UAAS,CAAGN,MAAM,CAAC,IAAD,CAAxB,CACA,GAAIO,QAAO,CAAG,CAAd,CACA,GAAMC,QAAO,CAAGP,OAAO,CAAC,UAAM,CAC5B,MAAO,CACLQ,IAAI,CAAE,IADD,CAELC,UAAU,CAAE,KAFP,CAGLC,SAAS,CAAE,GAHN,CAAP,CAKD,CANsB,CAMpB,EANoB,CAAvB,CAOAb,SAAS,CAAC,UAAM,CACd,GAAMc,SAAQ,CAAG,GAAIC,qBAAJ,CAAyB,SAACC,OAAD,CAAa,CACrD,4BAAgBA,OAAhB,IAAOC,KAAP,aACA,GAAIA,KAAK,CAACC,cAAV,CAA0B,CACxBC,UAAU,CAAC,UAAM,CACfC,WAAW,CAAC,UAAM,CAChB,GAAIX,OAAO,GAAKJ,KAAK,CAACgB,KAAtB,CAA6B,CAC3BC,aAAa,GACd,CAFD,IAEO,CACLb,OAAO,EAAI,CAAX,CACAF,SAAS,CAACE,OAAD,CAAT,CACD,CACF,CAPU,CAOR,EAPQ,CAAX,CAQD,CATS,CASP,IAAMJ,KAAK,CAACC,MATL,CAAV,CAUD,CACF,CAdgB,CAcdI,OAdc,CAAjB,CAeA,GAAMa,cAAa,CAAGf,SAAS,CAACgB,OAAhC,CACA,GAAID,aAAJ,CAAmB,CACjBT,QAAQ,CAACW,OAAT,CAAiBF,aAAjB,EACD,CACD,MAAO,WAAM,CACX,GAAIA,aAAJ,CAAmB,CACjBT,QAAQ,CAACY,SAAT,CAAmBH,aAAnB,EACD,CACF,CAJD,CAKD,CAzBQ,CAyBN,CAACf,SAAD,CAAYE,OAAZ,CAzBM,CAAT,CA0BA,mBACE,aAAK,GAAG,CAAEF,SAAV,CAAqB,SAAS,CAAC,uBAA/B,wBACE,aACE,KAAK,CAAC,4BADR,CAEE,OAAO,CAAC,KAFV,CAGE,KAAK,CAAC,OAHR,CAIE,MAAM,CAAC,OAJT,wBAME,mCACE,wBAAgB,EAAE,CAAC,eAAnB,wBACE,aAAM,MAAM,CAAC,IAAb,CAAkB,SAAS,CAAC,SAA5B,EADF,cAEE,aAAM,MAAM,CAAC,MAAb,CAAoB,SAAS,CAAC,SAA9B,EAFF,GADF,EANF,cAYE,eACE,KAAK,CAAE,CACLmB,MAAM,CAAE,qBADH,CAELC,gBAAgB,4BAAsBtB,MAAtB,WAFX,CADT,CAKE,EAAE,CAAC,IALL,CAME,EAAE,CAAC,IANL,CAOE,CAAC,CAAC,IAPJ,CAQE,aAAa,CAAC,OARhB,EAZF,GADF,cAwBE,aAAK,SAAS,CAAC,QAAf,WAAyBA,MAAzB,UAxBF,GADF,CA4BD,CAjED,CAmEA,cAAeF,oBAAf"},"metadata":{},"sourceType":"module"}